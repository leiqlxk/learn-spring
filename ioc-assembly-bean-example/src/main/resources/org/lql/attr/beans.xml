<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--  注入字面值参数：当属性包含xml中的特殊符号时我们使用一个特殊的xml标签来包住他(<![CDATA[]]>)，其作用是让xml解析器将标签中的字符串当作普通的文本对待，以防止特殊字符串对xml格式造成破坏，
      xml中包含五个特殊符号：&、<、>、"、'。注意spring不会对value中字符串前后的空格进行处理-->
    <bean id="car" class="org.lql.attr.Car">
        <property name="maxSpeed"><value>200</value></property>
        <property name="brand"><value><![CDATA[红旗&CA72]]></value></property>
    </bean>

    <!--  引用其他类型： ref可以通过以下三个属性引用容器中的其他bean：bean（通过该属性可以引用同一容器或父容器中的bean）、local（通过该属性只能引用同一配置文件中定义的bean）、
    parent（引用父容器中的bean）  -->
    <bean id="boss" class="org.lql.attr.Boss">
        <property name="car" ref="car"/>
        <!--<property name="car">
            <ref bean="car"></ref>
        </property>-->
    </bean>

    <!--  内部bean:当car bean只被boss bean引用，而不被容器中任何其他的bean引用，则可以将car以内部bean的方式注入boss中  -->
    <bean id="boss1" class="org.lql.attr.Boss">
        <property name="car">
            <bean class="org.lql.attr.Car">
                <property name="price" value="20000"/>
                <property name="maxSpeed" value="200"/>
            </bean>
        </property>
    </bean>

    <!--  当需要注入null值时不能使用<value></value>这样会解析为空字符串，必须使用<null/>才会解析为null值  -->
    <bean id="car1" class="org.lql.attr.Car">
        <property name="brand"><null/></property>
    </bean>

    <!--  级联属性:按照此配置spring将调用Boss.getCar().setBrand()方法进行属性注入。此时必须为Boss的car属性声明一个初始化对象  -->
    <bean id="boss2" class="org.lql.attr.Boss">
        <property name="car.brand" value="领克01"/>
    </bean>

    <!--  List属性注入  -->
    <bean id="boss3" class="org.lql.attr.Boss">
        <property name="favorites">
            <list>
                <value>看报</value>
                <value>赛车</value>
                <value>高尔夫</value>
                <ref bean="car"/>
            </list>
        </property>
    </bean>

    <!--  Set属性注入  -->
    <!--<bean id="boss3" class="org.lql.attr.Boss">
        <property name="favorites">
            <set>
                <value>看报</value>
                <value>赛车</value>
                <value>高尔夫</value>
                <ref bean="car"/>
            </set>
        </property>
    </bean>-->

    <!--  map属性注入  -->
    <bean id="boss4" class="org.lql.attr.Boss">
        <property name="jobs">
            <map>
                <entry>
                    <key><value>AM</value></key>
                    <value>会见客户</value>
                </entry>
                <entry>
                    <key><value>PM</value></key>
                    <value>公司内部会议</value>
                </entry>
            </map>
        </property>
    </bean>

    <!--  properties属性注入  -->
    <bean id="boss5" class="org.lql.attr.Boss">
        <property name="mails">
            <props>
                <prop key="jobMail">john-office@smart.com</prop>
                <prop key="lifeMail">john-life@smart.com</prop>
            </props>
        </property>
    </bean>

    <!--  强类型集合属性注入  -->
    <bean id="boss6" class="org.lql.attr.Boss">
        <property name="jobTime">
            <map>
                <entry>
                    <key><value>会见客户</value></key>
                    <!--  会自动转换   -->
                    <value>124</value>
                </entry>
            </map>
        </property>
    </bean>

    <!--  集合合并  -->
    <!--  父bean  -->
    <bean id="parentBoss" abstract="true" class="org.lql.attr.Boss">
        <property name="favorites">
            <list>
                <value>看报</value>
                <value>赛车</value>
                <value>高尔夫</value>
                <ref bean="car"/>
            </list>
        </property>
    </bean>
    <!--  指定父bean  -->
    <bean id="childBoss" parent="parentBoss">
        <property name="favorites">
            <!--  和父bean中的同名集合属性合并   -->
            <list merge="true">
                <value>爬山</value>
                <value>游泳</value>
            </list>
        </property>
    </bean>

    <!--  通过util命名空间配置集合类型的bean  -->
    <util:list id="favorites" list-class="java.util.ArrayList">
        <value>看报</value>
        <value>赛车</value>
        <value>高尔夫</value>
    </util:list>

    <!--  使用p命名空间简化配置  -->
    <bean id="car3" class="org.lql.attr.Car"
    p:brand="红旗&amp;CA72"
    p:maxSpeed="200"
    p:price="20000"/>
    <bean id="boss6" class="org.lql.attr.Boss"
          p:car-ref="car"/>
</beans>
