<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
    <context:component-scan base-package="org.lql.controller"/>
    // 装配自定义类型转换器
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!--  配置视图解析器  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/views/"
          p:suffix=".jsp"/>

    <!--  声明Marshaller，使用XStream  -->
    <bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <!--  使用STAX对XML消息进行处理，STAX占用内存少，响应速度快  -->
        <property name="streamDriver">
            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
        </property>
        <!--  使用XStream的注解定义XML转换规则，使用XStream注解的类在此声明  -->
        <property name="annotatedClasses">
            <list>
                <value>org.lql.domain.User</value>
            </list>
        </property>
    </bean>

    <!--  自定义HttpMessageConverter  -->
    <util:list id="messageConverters">
        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"
              p:marshaller-ref="xmlMarshaller" p:unmarshaller-ref="xmlMarshaller"/>
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    </util:list>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          p:messageConverters-ref="messageConverters"/>

    <!-- 其内建了很多转换器，可以完成大多数Java类型的转换工作，通过其可以注册自定义的类型转换器  -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="org.lql.domain.StringToUserConverter"/>
            </list>
        </property>
    </bean>

    <!--  将MyBindingInitializer安装到spring上下文中  -->
    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
            p:messageConverters-ref="messageConverters">
        <property name="webBindingInitializer">
            <bean class="org.lql.controller.MyBindingInitializer"/>
        </property>
    </bean>

    <!--国际化资源  -->
   <!-- <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/messages</value>
                <value>i18n/content</value>
            </list>
        </property>
    </bean>-->

    <!-- FreeMarker基础设施及视图解析器配置 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"
            p:templateLoaderPath="/WEB-INF/ftl" p:defaultEncoding="UTF-8">
        <property name="freemarkerSettings">
            <props>
                <prop key="classic_compatible">true</prop>
            </props>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
            p:order="5" p:suffix=".ftl" p:contentType="text/html; charset=utf-8"/>

    <!-- Excel及PDF视图解析器配置 -->
    <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
          p:order="10"/>
    <bean id="userListExcel" class="org.lql.controller.UserListExcelView"/>
    <bean id="userListPdf" class="org.lql.controller.UserListPdfView"/>-->

    <!-- XMl及JSON视图解析器配置 -->
    <!--<bean id="userListJson"
          class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
          p:modelKeys="userList"/>-->

    <!--<bean id="userListXml"
          class="org.springframework.web.servlet.view.xml.MarshallingView"
          p:modelKey="userList" p:marshaller-ref="xmlMarshaller"/>-->

    <!-- XML文件或国际化资源文件定义视图 -->
    <!-- <bean class="org.springframework.web.servlet.view.XmlViewResolver"
          p:order="20" p:location="/WEB-INF/views/smart-views.xml"/>

    <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver"
          p:order="30" p:basename="/i18n/views"/>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
          p:ignoreAcceptHeader="true"
          p:favorPathExtension="false"
          p:favorParameter="true"
          p:parameterName="format"
          p:defaultContentType="text/html">
        <property name="mediaTypes">
            <value>
                html=text/html
                xml=application/xml
                json=application/json
            </value>
        </property>
    </bean>-->
    <!-- 协商多种视图解析器 -->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
                      p:modelKeys="userList"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView"
                      p:modelKey="userList" p:marshaller-ref="xmlMarshaller"/>
            </list>
        </property>
    </bean>-->

</beans>